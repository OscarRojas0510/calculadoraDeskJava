package calc;

import java.awt.Color;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Locale;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author oscar
 */
public class Calculadora extends javax.swing.JFrame implements Datos
{

    private DetallePension detallePension;
    private LIstaNomina ln;
    private Object detalle[][];
    private double vUma;
    private double cuantiaBasica;
    private double IncrementoAnual;
    private double promedio;
    private double cuantiaBasAnual, cuantiaAnual, ayudaEsposa, ayudaHijos, ayudaPadres;
    private double ayudaSoledad, pensionAnualxVejez, sumaPensionAyudas;

    /**
     * Creates new form Frame1
     */
    public Calculadora()
    {
        initComponents();
        setpos();
        init2();

        setImages();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        btnCargar = new javax.swing.JButton();
        lSalDP = new javax.swing.JLabel();
        lRSalDP = new javax.swing.JLabel();
        btnDetalle = new javax.swing.JButton();
        lTotSem = new javax.swing.JLabel();
        lRTotSem = new javax.swing.JLabel();
        lEsposa = new javax.swing.JLabel();
        jComboBoxEsposa = new javax.swing.JComboBox<>();
        lHijos = new javax.swing.JLabel();
        jTextHijos = new javax.swing.JTextField();
        lPadres = new javax.swing.JLabel();
        jTextPadres = new javax.swing.JTextField();
        lEdad = new javax.swing.JLabel();
        jTextEdad = new javax.swing.JTextField();
        lCuantAnual = new javax.swing.JLabel();
        lRCuantAnual = new javax.swing.JLabel();
        Incremento = new javax.swing.JLabel();
        lRIncremento = new javax.swing.JLabel();
        lCuantAnualP = new javax.swing.JLabel();
        lRCuantAnualP = new javax.swing.JLabel();
        lAsigFamiliar = new javax.swing.JLabel();
        lRAsigFam = new javax.swing.JLabel();
        lAyudaSoledad = new javax.swing.JLabel();
        lRAyudaSoledad = new javax.swing.JLabel();
        lPenAnual = new javax.swing.JLabel();
        lRPenAnual = new javax.swing.JLabel();
        lPenMen = new javax.swing.JLabel();
        lRPenMen = new javax.swing.JLabel();
        btnExcel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Calculadora Ley 1973");
        setBackground(new java.awt.Color(39, 77, 105));
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowOpened(java.awt.event.WindowEvent evt)
            {
                formWindowOpened(evt);
            }
        });

        btnCargar.setText("Cargar pdf");
        btnCargar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnCargarActionPerformed(evt);
            }
        });

        lSalDP.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lSalDP.setText("Salario Diario Promedio Ultimas 250 Semanas:");
        lSalDP.setFocusable(false);

        lRSalDP.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lRSalDP.setFocusable(false);

        btnDetalle.setText("Detalle");
        btnDetalle.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnDetalleActionPerformed(evt);
            }
        });

        lTotSem.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lTotSem.setText("Total Semanas Cotizadas : ");
        lTotSem.setFocusable(false);

        lRTotSem.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lRTotSem.setFocusable(false);

        lEsposa.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lEsposa.setText("Existe esposa? : ");
        lEsposa.setFocusable(false);

        jComboBoxEsposa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No", "Si" }));
        jComboBoxEsposa.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                jComboBoxEsposaItemStateChanged(evt);
            }
        });

        lHijos.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lHijos.setText("Numero de hijos menores de edad o 25 estudiando :  ");
        lHijos.setFocusable(false);

        jTextHijos.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                jTextHijosKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                jTextHijosKeyTyped(evt);
            }
        });

        lPadres.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lPadres.setText("Padres que dependen economicamente : ");
        lPadres.setFocusable(false);

        jTextPadres.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                jTextPadresKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                jTextPadresKeyTyped(evt);
            }
        });

        lEdad.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lEdad.setText("Edad : ");
        lEdad.setFocusable(false);

        jTextEdad.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                jTextEdadKeyTyped(evt);
            }
        });

        lCuantAnual.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lCuantAnual.setText("Cuantia Básica Anual: ");
        lCuantAnual.setFocusable(false);

        lRCuantAnual.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lRCuantAnual.setFocusable(false);

        Incremento.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Incremento.setText("Incremento Anual a la cuantia : ");
        Incremento.setFocusable(false);

        lRIncremento.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lRIncremento.setFocusable(false);

        lCuantAnualP.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lCuantAnualP.setText("Cuantía Anual de la pensión : ");
        lCuantAnualP.setFocusable(false);

        lRCuantAnualP.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lRCuantAnualP.setFocusable(false);

        lAsigFamiliar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lAsigFamiliar.setText("Asignación familiar:");
        lAsigFamiliar.setFocusable(false);

        lRAsigFam.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lRAsigFam.setFocusable(false);

        lAyudaSoledad.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lAyudaSoledad.setText("Ayuda Soledad : ");
        lAyudaSoledad.setFocusable(false);

        lRAyudaSoledad.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lRAyudaSoledad.setFocusable(false);

        lPenAnual.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lPenAnual.setText("Pensión Anual x Cesentia : ");
        lPenAnual.setFocusable(false);

        lRPenAnual.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lRPenAnual.setFocusable(false);

        lPenMen.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lPenMen.setText("Pension Mensual : ");
        lPenMen.setFocusable(false);

        lRPenMen.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lRPenMen.setFocusable(false);

        btnExcel.setText("Exportar Excel");
        btnExcel.setEnabled(false);
        btnExcel.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnExcelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lTotSem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lRTotSem, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCargar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lEsposa)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBoxEsposa, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lSalDP)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lRSalDP, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnDetalle))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lHijos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextHijos, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lEdad)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lCuantAnual)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lRCuantAnual, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Incremento)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lRIncremento, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lCuantAnualP)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lRCuantAnualP, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lAsigFamiliar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lRAsigFam, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lPenAnual)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lRPenAnual, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(lPenMen)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(lRPenMen, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnExcel))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(lPadres)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jTextPadres, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lAyudaSoledad)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lRAyudaSoledad, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCargar)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lTotSem, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lRTotSem, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lRSalDP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lSalDP, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnDetalle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lEsposa, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxEsposa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lHijos, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextHijos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lPadres, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextPadres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lCuantAnual, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lRCuantAnual, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Incremento, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lRIncremento, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lCuantAnualP, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lRCuantAnualP, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lAsigFamiliar, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lRAsigFam, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lAyudaSoledad, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lRAyudaSoledad, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lPenAnual, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lRPenAnual, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lPenMen, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lRPenMen, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnExcel))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCargarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnCargarActionPerformed
    {//GEN-HEADEREND:event_btnCargarActionPerformed
        // TODO add your handling code here:
        this.detallePension = new DetallePension();
        evt.getID();
        boolean b = true;
        if (jTextHijos.getText().length() > 0 && jTextPadres.getText().length() > 0 && jTextEdad.getText().length() > 0)
        {
            int edad = Integer.parseInt(jTextEdad.getText());
            if (edad >= 60)
            {
                b = true;
            } else
            {
                b = false;
                JOptionPane.showMessageDialog(null, "La edad no es valida");
            }
        } else
        {
            b = false;
            JOptionPane.showMessageDialog(null, "Se deben llenar antes todos los cuadros de texto");
        }
        if (b)
        {
            this.detallePension.setTieneEsposa(jComboBoxEsposa.getSelectedItem().toString());
            this.detallePension.setCantHijos(jTextHijos.getText());
            this.detallePension.setCantPadres(jTextPadres.getText());
            this.detallePension.setEdad(jTextEdad.getText());
            this.detallePension.setUma(UMA + "");
            JFileChooser j = new JFileChooser();
            j.setFileFilter(new FileNameExtensionFilter("*.pdf", "pdf"));
            j.setAcceptAllFileFilterUsed(false);
            ln = new LIstaNomina();

            int xd = j.showOpenDialog(null);
            if (xd == JFileChooser.APPROVE_OPTION)
            {
                File fichero = j.getSelectedFile();
                String dir = fichero.getAbsolutePath();
                llenaLista(ln, dir);
                ln.verLista();
                if (ln.getInicio() != null)
                {
                    obtenerPromedio(ln);
                    obtenerTotalSemanas(ln);
                    btnExcel.setEnabled(true);
                }
            }
        }
    }//GEN-LAST:event_btnCargarActionPerformed

    private void btnDetalleActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnDetalleActionPerformed
    {//GEN-HEADEREND:event_btnDetalleActionPerformed
        // TODO add your handling code here:
        evt.getActionCommand();
        DetallePromedio dp = new DetallePromedio(detalle);
        dp.setVisible(true);
    }//GEN-LAST:event_btnDetalleActionPerformed

    private void jTextHijosKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTextHijosKeyTyped
    {//GEN-HEADEREND:event_jTextHijosKeyTyped
        // TODO add your handling code here:
        if (!(evt.getKeyChar() >= 48 && evt.getKeyChar() <= 57) || jTextHijos.getText().length() > 3)
        {
            evt.consume();
        }
    }//GEN-LAST:event_jTextHijosKeyTyped

    private void jTextHijosKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTextHijosKeyReleased
    {//GEN-HEADEREND:event_jTextHijosKeyReleased
        // TODO add your handling code here:
        evt.getID();
        if (jTextHijos.getText().length() > 0 || jComboBoxEsposa.getSelectedIndex() != 0)
        {
            jTextPadres.setEnabled(false);
            jTextPadres.setText("0");
        } else
        {
            jTextPadres.setEnabled(true);
            jTextPadres.setText("");
        }
    }//GEN-LAST:event_jTextHijosKeyReleased

    private void jTextPadresKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTextPadresKeyReleased
    {//GEN-HEADEREND:event_jTextPadresKeyReleased
        // TODO add your handling code here:
        evt.getID();
        if (jTextPadres.getText().length() > 0)
        {
            jTextHijos.setEnabled(false);
            jComboBoxEsposa.setEnabled(false);
            jTextHijos.setText("0");
        } else
        {
            jTextHijos.setEnabled(true);
            jComboBoxEsposa.setEnabled(true);
            jTextHijos.setText("");
        }
    }//GEN-LAST:event_jTextPadresKeyReleased

    private void jTextPadresKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTextPadresKeyTyped
    {//GEN-HEADEREND:event_jTextPadresKeyTyped
        // TODO add your handling code here:
        if (!(evt.getKeyChar() >= 48 && evt.getKeyChar() <= 57) || jTextPadres.getText().length() > 2)
        {
            evt.consume();
        }
    }//GEN-LAST:event_jTextPadresKeyTyped

    private void jComboBoxEsposaItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_jComboBoxEsposaItemStateChanged
    {//GEN-HEADEREND:event_jComboBoxEsposaItemStateChanged
        // TODO add your handling code here:
        evt.getID();
        if (jTextHijos.getText().length() > 0 || jComboBoxEsposa.getSelectedIndex() != 0)
        {
            jTextPadres.setEnabled(false);
            jTextPadres.setText("0");
        } else
        {
            jTextPadres.setEnabled(true);
            jTextPadres.setText("");
        }
    }//GEN-LAST:event_jComboBoxEsposaItemStateChanged

    private void jTextEdadKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTextEdadKeyTyped
    {//GEN-HEADEREND:event_jTextEdadKeyTyped
        // TODO add your handling code here:
        if (!(evt.getKeyChar() >= 48 && evt.getKeyChar() <= 57) || jTextEdad.getText().length() > 3)
        {
            evt.consume();
        }
    }//GEN-LAST:event_jTextEdadKeyTyped

    private void formWindowOpened(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowOpened
    {//GEN-HEADEREND:event_formWindowOpened
        // TODO add your handling code here:
        evt.getID();
    }//GEN-LAST:event_formWindowOpened

    private void btnExcelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnExcelActionPerformed
    {//GEN-HEADEREND:event_btnExcelActionPerformed
        // TODO add your handling code here:
        this.detallePension.creaExcel();
    }//GEN-LAST:event_btnExcelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() ->
        {
            new Calculadora().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Incremento;
    private javax.swing.JButton btnCargar;
    private javax.swing.JButton btnDetalle;
    private javax.swing.JButton btnExcel;
    private javax.swing.JComboBox<String> jComboBoxEsposa;
    private javax.swing.JTextField jTextEdad;
    private javax.swing.JTextField jTextHijos;
    private javax.swing.JTextField jTextPadres;
    private javax.swing.JLabel lAsigFamiliar;
    private javax.swing.JLabel lAyudaSoledad;
    private javax.swing.JLabel lCuantAnual;
    private javax.swing.JLabel lCuantAnualP;
    private javax.swing.JLabel lEdad;
    private javax.swing.JLabel lEsposa;
    private javax.swing.JLabel lHijos;
    private javax.swing.JLabel lPadres;
    private javax.swing.JLabel lPenAnual;
    private javax.swing.JLabel lPenMen;
    private javax.swing.JLabel lRAsigFam;
    private javax.swing.JLabel lRAyudaSoledad;
    private javax.swing.JLabel lRCuantAnual;
    private javax.swing.JLabel lRCuantAnualP;
    private javax.swing.JLabel lRIncremento;
    private javax.swing.JLabel lRPenAnual;
    private javax.swing.JLabel lRPenMen;
    private javax.swing.JLabel lRSalDP;
    private javax.swing.JLabel lRTotSem;
    private javax.swing.JLabel lSalDP;
    private javax.swing.JLabel lTotSem;
    // End of variables declaration//GEN-END:variables

    private void setpos()
    {
        setLocationRelativeTo(null);
    }

    private void llenaLista(LIstaNomina ln, String dir)
    {
        PDFManager pdfManager = new PDFManager();
        pdfManager.setFilePath(dir);
        String s;
        Calendar fechI, fechfn;
        try
        {
            s = pdfManager.toText();
            String txt = "Tu historia laboral";
            int i = s.indexOf(txt);
            char cc1 = 13;
            String s1 = "";
            if (i >= 0)
            {
                i += txt.length();
                char c = s.substring(i, i + 1).charAt(0);
                while (c == cc1 || c == '\n')
                {
                    i++;
                    c = s.substring(i, i + 1).charAt(0);
                }
                while (c != cc1)
                {
                    c = s.substring(i, i + 1).charAt(0);
                    i++;
                    if (c != cc1)
                    {
                        s1 += c;
                    }
                }
            }
            if (s1.toLowerCase().equals("vigente"))
            {
                LocalDateTime ldt = LocalDateTime.now();
                fechfn = new GregorianCalendar(ldt.getYear(), ldt.getMonthValue() - 1, ldt.getDayOfMonth());
            } else
            {
                fechfn = null;
            }
            i = -1;
            int i1;
            txt = "MODIFICACION DE SALARIO";
            i1 = s.indexOf(txt);
            i = setI(i, i1);

            txt = "BAJA";
            i1 = s.indexOf(txt);
            i = setI(i, i1);

            txt = "REINGRESO";
            i1 = s.indexOf(txt);
            i = setI(i, i1);

            txt = "ALTA";
            i1 = s.indexOf(txt);
            i = setI(i, i1);

            if (i >= 0)
            {
                while (i != -1)
                {
                    fechI = Calendar.getInstance();
                    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy", Locale.ENGLISH);
                    fechI.setTime(sdf.parse(s.substring(i - 10, i)));

                    i += txt.length();
                    char c = s.substring(i, i + 1).charAt(0);
                    s1 = "";
                    while (c != cc1)
                    {
                        if ((c >= 48 && c <= 57) || c == 46)
                        {
                            s1 += c;
                        }
                        i++;
                        c = s.substring(i, i + 1).charAt(0);
                    }
                    boolean b = true;
                    i1 = s.indexOf("/* Valor del último salario base de cotización diario en pesos.");
                    if (i1 != -1)
                    {
                        if (i1 < i)
                        {
                            b = false;
                        }
                    }
                    s = s.substring(i);
                    i = -1;
                    txt = "MODIFICACION DE SALARIO";
                    i1 = s.indexOf(txt);
                    i = setI(i, i1);

                    txt = "BAJA";
                    i1 = s.indexOf(txt);
                    i = setI(i, i1);

                    txt = "REINGRESO";
                    i1 = s.indexOf(txt);
                    i = setI(i, i1);

                    txt = "ALTA";
                    i1 = s.indexOf(txt);
                    i = setI(i, i1);

                    if (fechfn != null && !fechI.equals(fechfn) && b)
                    {
                        ln.inserta(new Nomina(fechI, fechfn, Double.parseDouble(s1)));
                    }
                    fechfn = fechI;
                }
            }
            pdfManager.getPdDoc().close();
        } catch (IOException | NumberFormatException | ParseException ex)
        {
            System.out.println(ex.getMessage());
        }
    }

    public int setI(int i, int i1)
    {
        if (i1 != -1)
        {
            if (i == -1)
            {
                i = i1;
            } else
            {
                if (i1 < i)
                {
                    i = i1;
                }
            }
        }
        return i;
    }

    private void obtenerPromedio(LIstaNomina ln)
    {
        double totalSemanas = 0;
        double semanasDeMas;
        double sumaSalario = 0;
        detalle = null;
        Object o[] = new Object[4];
        Nomina nodo = ln.getInicio();
        Connection con;
        DecimalFormat df = new DecimalFormat("0.00");
        try
        {
            con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:system", "hr", "hr");
            Statement st = con.createStatement();

            while (nodo != null)
            {
                String fi = nodo.getFechaInicio().get(Calendar.DAY_OF_MONTH) + "/" + (nodo.getFechaInicio().get(Calendar.MONTH) + 1) + "/" + nodo.getFechaInicio().get(Calendar.YEAR);
                String ff = nodo.getFechaFin().get(Calendar.DAY_OF_MONTH) + "/" + (nodo.getFechaFin().get(Calendar.MONTH) + 1) + "/" + nodo.getFechaFin().get(Calendar.YEAR);
                double sueldo = nodo.getSueldo();
                String query = "select (to_date('" + ff + "','dd/mm/yyyy')+1-to_date('" + fi + "','dd/mm/yyyy'))/7 as semanas from dual";
                ResultSet rs = st.executeQuery(query);
                rs.next();
                String res = rs.getString(1);
                double semanas = Double.parseDouble(res);

                totalSemanas += semanas;
                semanasDeMas = totalSemanas - 250;
                sumaSalario += semanas * sueldo;
                if (totalSemanas <= 250)
                {
                    nodo = nodo.getSig();
                } else
                {
                    sumaSalario -= semanas * sueldo;
                    nodo = null;
                    semanas -= Double.parseDouble(df.format(semanasDeMas));
                    totalSemanas -= semanasDeMas;
                    sumaSalario += semanas * sueldo;
                }

                o[0] = fi;
                o[1] = ff;
                o[2] = sueldo;
                o[3] = df.format(semanas);
                detalle = inserta(detalle, o);
                btnDetalle.setVisible(true);
            }
        } catch (SQLException ex)
        {
            btnDetalle.setVisible(false);
            JOptionPane.showMessageDialog(null, "Error . . . \n" + ex.getMessage());
            btnExcel.setEnabled(false);
        }
        if (totalSemanas > 0)
        {
            this.detallePension.setSumaSalario(df.format(sumaSalario));
            this.detallePension.setDetallePromedio(detalle);
            this.promedio = sumaSalario / totalSemanas;

            this.detallePension.setSalarioPromedioUlt250(df.format(this.promedio));
            lRSalDP.setText(numWcomma(this.detallePension.getSalarioPromedioUlt250()));

            vUma = Double.parseDouble(df.format(this.promedio / Datos.UMA));
            this.detallePension.setSalarioVuma(vUma + "");

            setCuantiaIncremento();
            this.detallePension.setCuantiaBasica(this.cuantiaBasica + "");

            this.detallePension.setCuantiaDiaria(df.format(this.promedio * (cuantiaBasica / 100d)));
            this.cuantiaBasAnual = (this.promedio * (cuantiaBasica / 100d)) * 365d;

            this.detallePension.setCuantiaBasAnual(df.format(this.cuantiaBasAnual));
            lRCuantAnual.setText(numWcomma(this.detallePension.getCuantiaBasAnual()));
        }
    }

    private void setCuantiaIncremento()
    {
        for (double[] TABLAINCREMENTOS1 : Datos.TABLAINCREMENTOS)
        {
            if (vUma <= TABLAINCREMENTOS1[0])
            {
                this.cuantiaBasica = TABLAINCREMENTOS1[1];
                this.IncrementoAnual = TABLAINCREMENTOS1[2];
                break;
            }
        }
    }

    private void obtenerTotalSemanas(LIstaNomina ln)
    {
        double sueldototal = 0;
        double totalSemanas = 0;
        Nomina nodo = ln.getInicio();
        Connection con;
        DecimalFormat df = new DecimalFormat("0.00");
        try
        {
            con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:system", "hr", "hr");
            Statement st = con.createStatement();

            while (nodo != null)
            {
                String fi = nodo.getFechaInicio().get(Calendar.DAY_OF_MONTH) + "/" + (nodo.getFechaInicio().get(Calendar.MONTH) + 1) + "/" + nodo.getFechaInicio().get(Calendar.YEAR);
                String ff = nodo.getFechaFin().get(Calendar.DAY_OF_MONTH) + "/" + (nodo.getFechaFin().get(Calendar.MONTH) + 1) + "/" + nodo.getFechaFin().get(Calendar.YEAR);
                String query = "select (to_date('" + ff + "','dd/mm/yyyy')+1-to_date('" + fi + "','dd/mm/yyyy'))/7 as semanas from dual";
                ResultSet rs = st.executeQuery(query);
                rs.next();
                String res = rs.getString(1);
                double semanas = Double.parseDouble(res);
                totalSemanas += semanas;
                sueldototal += nodo.getSueldo();
                nodo = nodo.getSig();

            }
        } catch (SQLException ex)
        {
            btnExcel.setEnabled(false);
            btnDetalle.setVisible(false);
            JOptionPane.showMessageDialog(null, "Error . . . \n" + ex.getMessage());
        }

        if (totalSemanas > 0)
        {
            this.detallePension.setTotalSemanasCotizadas(df.format(totalSemanas));
            lRTotSem.setText(numWcomma(this.detallePension.getTotalSemanasCotizadas()));

            this.detallePension.setIncrementoCuantiaBasica(this.IncrementoAnual + "");
            double incrementoDiario = this.promedio * this.IncrementoAnual / 100d;

            this.detallePension.setIncrementoDiario(df.format(incrementoDiario));

            double incrementoAnualPrevio = incrementoDiario * 365d;
            this.detallePension.setIncrementoAnualPrevio(df.format(incrementoAnualPrevio));

            double aniosdespues = 0;
            totalSemanas -= 500;
            if (totalSemanas > 0)
            {
                DecimalFormat df2 = new DecimalFormat("0");
                aniosdespues = Double.parseDouble(df2.format(totalSemanas / 52d));
                this.detallePension.setAniosDespues500Sem(aniosdespues + "");
            }

            double incAnualCuantBas = incrementoAnualPrevio * aniosdespues;
            this.detallePension.setIncrementoAnualCuantiaBasica(df.format(incAnualCuantBas));
            lRIncremento.setText(numWcomma(this.detallePension.getIncrementoAnualCuantiaBasica()));

            cuantiaAnual = cuantiaBasAnual + incAnualCuantBas;
            this.detallePension.setCuantiaAnualPension(df.format(cuantiaAnual));
            lRCuantAnualP.setText(numWcomma(this.detallePension.getCuantiaAnualPension()));

            this.ayudaEsposa = 0;
            if (jComboBoxEsposa.getSelectedItem().equals("Si"))
            {
                ayudaEsposa = cuantiaAnual * 0.15;
            }
            this.detallePension.setAyudaAnualAsigEsposa(df.format(ayudaEsposa));

            this.ayudaHijos = 0;
            if (!jTextHijos.getText().equals("0"))
            {
                ayudaHijos = cuantiaAnual * Double.parseDouble(jTextHijos.getText()) * 0.1;
            }
            this.detallePension.setAyudaAnualHijos(df.format(ayudaHijos));
            this.ayudaPadres = 0;
            if (!jTextHijos.getText().equals("0"))
            {
                ayudaPadres = cuantiaAnual * Double.parseDouble(jTextPadres.getText()) * 0.2;
            }
            this.detallePension.setAyudaAnualPadres(df.format(ayudaPadres));
            lRAsigFam.setText(numWcomma(df.format(ayudaEsposa + ayudaHijos + ayudaPadres)));

            ayudaSoledad = 0;
            if (jComboBoxEsposa.getSelectedItem().equals("No") && jTextHijos.getText().equals("0") && jTextHijos.getText().equals("0"))
            {
                ayudaSoledad = cuantiaAnual * 0.15;
            }
            this.detallePension.setAyudaAnualSoledad(df.format(ayudaSoledad));
            lRAyudaSoledad.setText(numWcomma(this.detallePension.getAyudaAnualSoledad()));

            double totalAyudas = ayudaEsposa + ayudaHijos + ayudaPadres + ayudaSoledad;
            sumaPensionAyudas = cuantiaAnual + totalAyudas;
            this.detallePension.setTotalAyudas(df.format(totalAyudas) + "");
            this.detallePension.setCuantiaAnualPensionAyudas(df.format(sumaPensionAyudas));

            pensionAnualxVejez = sumaPensionAyudas * 1.11;
            this.detallePension.setPensionAnualVejez(df.format(pensionAnualxVejez));
            double edad = Double.parseDouble(jTextEdad.getText());
            double porcentajePension = 75d + ((edad - 60d) * 5d);
            if (porcentajePension >= 100d)
            {
                porcentajePension = 100d;
            }
            this.detallePension.setPorcPensionxEdad(porcentajePension + "");

            Double pensionAnual = pensionAnualxVejez * porcentajePension / 100d;
            this.detallePension.setPensionAnualxCesentia(df.format(pensionAnual));
            lRPenAnual.setText(numWcomma(this.detallePension.getPensionAnualxCesentia()));

            double pensiónMensual = pensionAnual / 12d;
            this.detallePension.setPensionMensual(df.format(pensiónMensual));
            lRPenMen.setText(numWcomma(this.detallePension.getPensionMensual()));
        }
    }

    private Object[][] inserta(Object arr1[][], Object arr2[])
    {

        if (arr1 == null)
        {
            Object temp[][] = new Object[1][4];
            System.arraycopy(arr2, 0, temp[0], 0, 4);
            return temp;
        } else
        {
            Object temp[][] = new Object[arr1.length + 1][4];
            System.arraycopy(arr1, 0, temp, 0, arr1.length);
            System.arraycopy(arr2, 0, temp[arr1.length], 0, 4);
            return temp;
        }
    }

    private void init2()
    {
        this.ln = new LIstaNomina();
        this.btnDetalle.setVisible(false);
    }

    public String numWcomma(String num)
    {
        if (num.equals("0.00"))
        {
            int asda = 12;
        }
        int punto = num.indexOf(".");
        String decimales = null;
        String enteros;
        if (punto != -1)
        {
            decimales = num.substring(punto, num.length());
            enteros = num.substring(0, punto);
        } else
        {
            enteros = num + "";
        }
        String enteros2 = "";
        int j = 0;

        while (enteros.length() >= 3)
        {
            if (j == 3)
            {
                enteros2 = "," + enteros.substring(enteros.length() - 3, enteros.length()) + enteros2;
                j = 0;
                enteros = enteros.substring(0, enteros.length() - 3);
            } else
            {
                j++;
            }
        }
        if (enteros.length() != 0)
        {
            enteros2 = enteros + enteros2;
        }
        if (enteros2.substring(0, 1).equals(","))
        {
            enteros2 = enteros2.substring(1);
        }
        if (punto != -1)
        {
            return "$" + enteros2 + decimales;
        } else
        {
            return "$" + enteros2;
        }
    }

    private void setImages()
    {
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/images/calculadora.png")));
        this.getContentPane().setBackground(new Color(123, 182, 97));
        this.detallePension = new DetallePension();
    }
}
